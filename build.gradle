plugins {
    id 'java'
	id 'com.diffplug.spotless' version "${spotlessVersion}" apply false
}

allprojects {
    group = 'com.engilyin'
    version = project.getProperty("version")=='unspecified'? "${baseVersion}-SNAPSHOT" : project.getProperty("version")	
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    
    if(!System.getenv("CICD")) {
        spotless {
          ratchetFrom 'origin/main'
          format 'misc', {
            target '*.gradle', '*.md'
            trimTrailingWhitespace()
            leadingTabsToSpaces()
            endWithNewline()
          }
          java {
            target 'src/*/java/**/*.java'
            formatAnnotations()
            toggleOffOn()
            palantirJavaFormat()
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
          }
        }
    }

}

if (rootProject == project) {
    task installGitHook(type: Copy) {
        println 'Checking if Git hook needs to be copied...'

        def destinationFile = new File(rootProject.rootDir, '.git/hooks/pre-commit')

        onlyIf { !destinationFile.exists() } 

        from new File(rootProject.rootDir, 'hooks/pre-commit')
        into new File(rootProject.rootDir, '.git/hooks')
        filePermissions {
            unix 0775
        }
    }

    tasks.named("assemble").configure {
        dependsOn installGitHook
    }
}


